"""
Function
Always follow modular coding approach.
Always use functions while writing a code.
"""
print(len("Good Morning."))


#  How to create a function ?
def test():
    pass


def test1():
    print("This is my first function.")


"""
By default function returns a none type of data.
"""


def test2():
    return "This is my first function."


def test3():
    return 23


def test4():
    #  By default, it will return tuple.
    return 4, 3, 3, 6, "Suman", [1, 2, 3, 4, 5]


def test5():
    a = 6 * 7 / 6
    return a


print("Value inside test2() function is :", test2())
print(type(test2()))
print(type(test3()))
print(type(test4()))
print(test4())
b = test4()
print(b[:3:-1])

i, j, c, d = 1, 5, "Dynamic", [1, 2, 3, 5, 5]
print(c)

print(test5())

list1 = [3, 4, 6, 7, 3, 2, 2, 4, "Suman", [1, 25, 7, 9, 9]]
list2 = "Suman"


def test6(a):
    if type(a) is list:
        var = []
        for i in a:
            if type(i) is int:
                var.append(i)
        return var
    else:
        return "Not a list"


print(test6(list1))
print(test6({3, 4, 5}))


#  Take input as a dict and return the keys from it.

def test8(c):
    if type(c) is dict:
        return c.keys()
    else:
        return "You have not passed a dictionary."


print(test8("Suman"))
print(test8({"a": "Suman", "b": "mal"}))


# Take any number of inputs.

def test9(a, b):
    if type(a) is list and type(b) is list:
        a.extend(b)
        return a
    else:
        return "Either of your data is not list."


print(test9([12], ["Suman"]))

"""
Create a function which is going to print 
"""

"""Doc String 
Comments inside triple quotes inside a functione+. 

"""


def triangle(i):
    """
    This is a function to create a triangle.
    You can give input as integer.
    And you will get a triangle of that size.
    :param i: int
    :return: print triangle of size i
    """
    if type(i) is int and type(j) is int:
        for x in range(0, i, 1):
            for y in range(0, x, 1):
                print("x", end=" ")
            print("\t")
        pass
    else:
        return "This is not a valid input."


triangle(int(input("Enter the size of triangle: ")))

help(triangle)
